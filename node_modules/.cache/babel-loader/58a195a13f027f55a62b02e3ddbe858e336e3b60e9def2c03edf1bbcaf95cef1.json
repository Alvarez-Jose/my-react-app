{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\personal project\\\\my-react-app\\\\src\\\\components\\\\Common\\\\ToggleButton.jsx\",\n  _s = $RefreshSig$();\n// src/components/common/ToggleButton.jsx\n// src/components/common/ToggleButton.jsx\nimport React, { useState } from \"react\";\nimport './ToggleButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleButton = ({\n  label,\n  onToggle\n}) => {\n  _s();\n  const [isChecked, setChecked] = useState(false);\n  const handleToggle = () => {\n    setChecked(prevChecked => {\n      const newChecked = !prevChecked;\n      if (onToggle) {\n        onToggle(newChecked);\n      }\n      return newChecked;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `toggle-button ${isChecked ? \"checked\" : \"\"}`,\n    onClick: handleToggle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"knobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ToggleButton, \"P/0hK6/DbF+M+sQlrrxI3A2Z4ZU=\");\n_c = ToggleButton;\nexport default ToggleButton;\nvar _c;\n$RefreshReg$(_c, \"ToggleButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToggleButton","label","onToggle","_s","isChecked","setChecked","handleToggle","prevChecked","newChecked","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/personal project/my-react-app/src/components/Common/ToggleButton.jsx"],"sourcesContent":["// src/components/common/ToggleButton.jsx\r\n// src/components/common/ToggleButton.jsx\r\nimport React, { useState } from \"react\";\r\nimport './ToggleButton.css';\r\n\r\nconst ToggleButton = ({ label, onToggle }) => {\r\n  const [isChecked, setChecked] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    setChecked((prevChecked) => {\r\n      const newChecked = !prevChecked;\r\n      if (onToggle) {\r\n        onToggle(newChecked);\r\n      }\r\n      return newChecked;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={`toggle-button ${isChecked ? \"checked\" : \"\"}`} onClick={handleToggle}>\r\n      <div className=\"knobs\"></div>\r\n      <div className=\"label\">{label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToggleButton;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzBD,UAAU,CAAEE,WAAW,IAAK;MAC1B,MAAMC,UAAU,GAAG,CAACD,WAAW;MAC/B,IAAIL,QAAQ,EAAE;QACZA,QAAQ,CAACM,UAAU,CAAC;MACtB;MACA,OAAOA,UAAU;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,oBACET,OAAA;IAAKU,SAAS,EAAG,iBAAgBL,SAAS,GAAG,SAAS,GAAG,EAAG,EAAE;IAACM,OAAO,EAAEJ,YAAa;IAAAK,QAAA,gBACnFZ,OAAA;MAAKU,SAAS,EAAC;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC7BhB,OAAA;MAAKU,SAAS,EAAC,OAAO;MAAAE,QAAA,EAAEV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACZ,EAAA,CAnBIH,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAqBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}