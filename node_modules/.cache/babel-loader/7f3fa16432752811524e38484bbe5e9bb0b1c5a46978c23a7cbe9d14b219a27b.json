{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\personal project\\\\my-react-app\\\\src\\\\components\\\\Common\\\\ToggleButton.jsx\",\n  _s = $RefreshSig$();\n// src/components/common/ToggleButton.jsx\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './ToggleButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleButton = ({\n  to,\n  label,\n  isSwitch,\n  onToggle\n}) => {\n  _s();\n  const [isChecked, setChecked] = useState(false);\n  const handleToggle = () => {\n    setChecked(prevChecked => {\n      const newChecked = !prevChecked;\n      if (onToggle) {\n        onToggle(newChecked);\n      }\n      return newChecked;\n    });\n  };\n  if (isSwitch) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `checkbox-wrapper-35 ${isChecked ? \"checked\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: \"private\",\n        name: \"switch\",\n        id: \"switch\",\n        type: \"checkbox\",\n        className: \"switch\",\n        checked: isChecked,\n        onChange: handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"switch-x-text\",\n          children: \"This is \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"switch-x-toggletext\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"switch-x-unchecked\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"switch-x-hiddenlabel\",\n              children: \"Unchecked: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), \"Off\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"switch-x-checked\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"switch-x-hiddenlabel\",\n              children: \"Checked: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), \"On\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Default behavior if not a switch\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `toggle-button ${isChecked ? \"checked\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: to,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ToggleButton, \"P/0hK6/DbF+M+sQlrrxI3A2Z4ZU=\");\n_c = ToggleButton;\nexport default ToggleButton;\nvar _c;\n$RefreshReg$(_c, \"ToggleButton\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","ToggleButton","to","label","isSwitch","onToggle","_s","isChecked","setChecked","handleToggle","prevChecked","newChecked","className","children","value","name","id","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["C:/Projects/personal project/my-react-app/src/components/Common/ToggleButton.jsx"],"sourcesContent":["// src/components/common/ToggleButton.jsx\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './ToggleButton.css';\r\n\r\nconst ToggleButton = ({ to, label, isSwitch, onToggle }) => {\r\n  const [isChecked, setChecked] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    setChecked((prevChecked) => {\r\n      const newChecked = !prevChecked;\r\n      if (onToggle) {\r\n        onToggle(newChecked);\r\n      }\r\n      return newChecked;\r\n    });\r\n  };\r\n\r\n  if (isSwitch) {\r\n    return (\r\n      <div className={`checkbox-wrapper-35 ${isChecked ? \"checked\" : \"\"}`}>\r\n        <input\r\n          value=\"private\"\r\n          name=\"switch\"\r\n          id=\"switch\"\r\n          type=\"checkbox\"\r\n          className=\"switch\"\r\n          checked={isChecked}\r\n          onChange={handleToggle}\r\n        />\r\n        <label htmlFor=\"switch\">\r\n          <span className=\"switch-x-text\">This is </span>\r\n          <span className=\"switch-x-toggletext\">\r\n            <span className=\"switch-x-unchecked\">\r\n              <span className=\"switch-x-hiddenlabel\">Unchecked: </span>Off\r\n            </span>\r\n            <span className=\"switch-x-checked\">\r\n              <span className=\"switch-x-hiddenlabel\">Checked: </span>On\r\n            </span>\r\n          </span>\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Default behavior if not a switch\r\n  return (\r\n    <div className={`toggle-button ${isChecked ? \"checked\" : \"\"}`}>\r\n      <Link to={to}>{label}</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToggleButton;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}