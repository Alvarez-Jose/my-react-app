{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Resume = () => {\n  _s();\n  useEffect(() => {\n    // Create a new window for the pop-up\n    const popupWindow = window.open('about:blank', '_blank', 'width=500,height=500');\n\n    // Check if the pop-up window was created successfully\n    if (!popupWindow) {\n      console.error('Failed to open pop-up window.');\n      return;\n    }\n\n    // Create an iframe within the pop-up window to display the PDF\n    const iframe = document.createElement('iframe');\n    iframe.src = './Antonio_Resume.pdf'; // Adjust the path to your PDF file\n    iframe.style.width = '100%';\n    iframe.style.height = '100%';\n    iframe.title = 'Resume PDF'; // Provide a title for accessibility\n\n    // Append the iframe to the pop-up window\n    popupWindow.document.body.appendChild(iframe);\n\n    // Clean up the pop-up window when the component unmounts\n    return () => {\n      popupWindow.close();\n    };\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  // Return an empty element as the actual content is handled in the useEffect\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Resume, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Resume;\nexport default Resume;\nvar _c;\n$RefreshReg$(_c, \"Resume\");","map":{"version":3,"names":["React","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","Resume","_s","popupWindow","window","open","console","error","iframe","document","createElement","src","style","width","height","title","body","appendChild","close","_c","$RefreshReg$"],"sources":["C:/Projects/personal project/my-react-app/src/components/Resume/Resume.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst Resume = () => {\r\n  useEffect(() => {\r\n    // Create a new window for the pop-up\r\n    const popupWindow = window.open('about:blank', '_blank', 'width=500,height=500');\r\n\r\n    // Check if the pop-up window was created successfully\r\n    if (!popupWindow) {\r\n      console.error('Failed to open pop-up window.');\r\n      return;\r\n    }\r\n\r\n    // Create an iframe within the pop-up window to display the PDF\r\n    const iframe = document.createElement('iframe');\r\n    iframe.src = './Antonio_Resume.pdf'; // Adjust the path to your PDF file\r\n    iframe.style.width = '100%';\r\n    iframe.style.height = '100%';\r\n    iframe.title = 'Resume PDF'; // Provide a title for accessibility\r\n\r\n    // Append the iframe to the pop-up window\r\n    popupWindow.document.body.appendChild(iframe);\r\n\r\n    // Clean up the pop-up window when the component unmounts\r\n    return () => {\r\n      popupWindow.close();\r\n    };\r\n  }, []); // Empty dependency array ensures the effect runs only once on mount\r\n\r\n  // Return an empty element as the actual content is handled in the useEffect\r\n  return <></>;\r\n};\r\n\r\nexport default Resume;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnBN,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,WAAW,GAAGC,MAAM,CAACC,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,sBAAsB,CAAC;;IAEhF;IACA,IAAI,CAACF,WAAW,EAAE;MAChBG,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;MAC9C;IACF;;IAEA;IACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,sBAAsB,CAAC,CAAC;IACrCH,MAAM,CAACI,KAAK,CAACC,KAAK,GAAG,MAAM;IAC3BL,MAAM,CAACI,KAAK,CAACE,MAAM,GAAG,MAAM;IAC5BN,MAAM,CAACO,KAAK,GAAG,YAAY,CAAC,CAAC;;IAE7B;IACAZ,WAAW,CAACM,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,MAAM,CAAC;;IAE7C;IACA,OAAO,MAAM;MACXL,WAAW,CAACe,KAAK,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,oBAAOlB,OAAA,CAAAF,SAAA,mBAAI,CAAC;AACd,CAAC;AAACI,EAAA,CA7BID,MAAM;AAAAkB,EAAA,GAANlB,MAAM;AA+BZ,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}